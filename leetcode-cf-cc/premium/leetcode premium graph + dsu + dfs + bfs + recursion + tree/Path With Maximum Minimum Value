Given an m x n integer matrix grid, return the maximum score of a path starting at (0, 0) and ending at (m - 1, n - 1) moving in the 4 cardinal directions.

The score of a path is the minimum value in that path.

For example, the score of the path 8 → 4 → 5 → 9 is 4.
 

Example 1:
imaag 1
https://github.com/vickykr26941/Data-structure-And-algorithm/blob/main/premium/leetcode%20premium%20graph%20%2B%20dsu%20%2B%20dfs%20%2B%20bfs%20%2B%20recursion%20%2B%20tree/images/maxgrid1.jpg


Input: grid = [[5,4,5],[1,2,6],[7,4,6]]
Output: 4

Explanation: The path with the maximum score is highlighted in yellow. 
Example 2:
image 2 :
https://github.com/vickykr26941/Data-structure-And-algorithm/blob/main/premium/leetcode%20premium%20graph%20%2B%20dsu%20%2B%20dfs%20%2B%20bfs%20%2B%20recursion%20%2B%20tree/images/maxgrid2.jpg


Input: grid = [[2,2,1,2,2,2],[1,2,2,2,1,2]]
Output: 2
Example 3:
image 3 : 
https://github.com/vickykr26941/Data-structure-And-algorithm/blob/main/premium/leetcode%20premium%20graph%20%2B%20dsu%20%2B%20dfs%20%2B%20bfs%20%2B%20recursion%20%2B%20tree/images/maxgrid3.jpg


Input: grid = [[3,4,6,3,4],[0,2,1,1,7],[8,8,3,2,7],[3,2,4,9,8],[4,1,2,0,0],[4,6,5,4,3]]
Output: 3
 

Constraints:
      m == grid.length
      n == grid[i].length
      1 <= m, n <= 100
      0 <= grid[i][j] <= 109

